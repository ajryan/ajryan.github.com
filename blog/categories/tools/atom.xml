<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | Aidan Ryan]]></title>
  <link href="http://www.aidanjryan.com/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://www.aidanjryan.com/"/>
  <updated>2014-04-22T12:44:08-07:00</updated>
  <id>http://www.aidanjryan.com/</id>
  <author>
    <name><![CDATA[Aidan Ryan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TFS Test Steps Editor 2.1.0]]></title>
    <link href="http://www.aidanjryan.com/blog/2013/09/04/tfs-test-steps-editor-2-dot-1-0/"/>
    <updated>2013-09-04T07:15:00-07:00</updated>
    <id>http://www.aidanjryan.com/blog/2013/09/04/tfs-test-steps-editor-2-dot-1-0</id>
    <content type="html"><![CDATA[<p>I just published a new release of my <a href="http://teststepseditor.codeplex.com">TFS Test Steps Editor</a>. I'm pretty excited about this one, as it includes the first community contribution to the project!<!--more--> GitHub user <a href="https://github.com/mikepoz59">mikepoz59</a> built an awesome work item query / test case picker UI.</p>

<p>For this release, I have created two binary packages - one targeted at the TFS2010 API and another for the TFS2012 API. My error tracking system has been regularly emailing me reports from users who do not have the TFS2010 client assemblies installed, and a few discussions have cropped up in CodePlex reporting some TFS2012 formatting issues. I'm hoping this resolves both problems.</p>

<p>Visit the <a href="http://teststepseditor.codeplex.com">project</a> at CodePlex and pick up either the <a href="https://teststepseditor.codeplex.com/downloads/get/724002">TFS2010</a> or <a href="https://teststepseditor.codeplex.com/releases/view/111691">TFS2012</a> release.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Updated WinHaste hastebin client]]></title>
    <link href="http://www.aidanjryan.com/blog/2013/02/08/updated-winhaste-hastebin-client/"/>
    <updated>2013-02-08T13:17:00-08:00</updated>
    <id>http://www.aidanjryan.com/blog/2013/02/08/updated-winhaste-hastebin-client</id>
    <content type="html"><![CDATA[<p>I just pushed a small update to my <a href="https://github.com/ajryan/WinHaste">WinHaste</a> hastebin client (<a href="http://ajryan-github-downloads.s3.amazonaws.com/WinHaste.exe">binary</a>). <a href="http://hastebin.com/">Hastebin</a> is a cool, minimal, login-free alternative to Pastebin. Now, when a command's output is being piped to WinHaste, the output will be echoed to the console. This is especially handy if you are running an interactive command, so you aren't entering values "blind."<!--more--></p>

<p>WinHaste supports piped or interactive entry - if you enter <code>WinHaste.exe</code> with no arguments, it will read user input from the console until an end-of-file <code>^Z</code> character is entered. In this mode, Windows already writes user input to the console, so echoing within WinHaste would result in doubling every character typed. I ran across a nice technique in <a href="http://stackoverflow.com/a/9712392/1042">this StackOverflow answer</a> for checking whether the current input stream is piped or interactive:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">bool</span> <span class="nf">IsInputPiped</span><span class="p">()</span>
</span><span class='line'><span class="p">{&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">try</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">tmp</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="n">KeyAvailable</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">catch</span> <span class="p">(</span><span class="n">InvalidOperationException</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I navigated into the disassembly of the <code>Console.KeyAvailable</code> (thanks, ReSharper!) found found the following:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">bool</span> <span class="n">r</span> <span class="p">=</span> <span class="n">Win32Native</span><span class="p">.</span><span class="n">PeekConsoleInput</span><span class="p">(</span><span class="n">ConsoleInputHandle</span><span class="p">,</span> <span class="k">out</span> <span class="n">ir</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="k">out</span> <span class="n">numEventsRead</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(!</span><span class="n">r</span><span class="p">)</span> <span class="p">{&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="kt">int</span> <span class="n">errorCode</span> <span class="p">=</span> <span class="n">Marshal</span><span class="p">.</span><span class="n">GetLastWin32Error</span><span class="p">();</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">errorCode</span> <span class="p">==</span> <span class="n">Win32Native</span><span class="p">.</span><span class="n">ERROR_INVALID_HANDLE</span><span class="p">)</span>
</span><span class='line'>    <span class="k">throw</span> <span class="k">new</span> <span class="nf">InvalidOperationException</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">GetResourceString</span><span class="p">(</span><span class="s">&quot;InvalidOperation_ConsoleKeyAvailableOnFile&quot;</span><span class="p">));</span>
</span><span class='line'><span class="n">__Error</span><span class="p">.</span><span class="n">WinIOError</span><span class="p">(</span><span class="n">errorCode</span><span class="p">,</span> <span class="s">&quot;stdin&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>So, I could P/Invoke PeekConsoleInput myself, but this works fine for me!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get peer reviews for your website with Criticue]]></title>
    <link href="http://www.aidanjryan.com/blog/2013/01/07/get-peer-reviews-for-your-website-with-criticue/"/>
    <updated>2013-01-07T11:27:00-08:00</updated>
    <id>http://www.aidanjryan.com/blog/2013/01/07/get-peer-reviews-for-your-website-with-criticue</id>
    <content type="html"><![CDATA[<p>I encountered a very useful new website called <a href="http://criticue.com"><strong>Criticue</strong></a>. It's a way to get quick, unbiased feedback of your website. It is dead simple to get started, just enter your URL - no signup required.<!--more--> After that, provide at least one review of another site, and you'll shortly get a review of your own. I've submitted two sites and have gotten feedback within 12 hours each time. At any point, you can create a username and password and return later to re-read reviews you've received. You can also submit additional reviews of others' sites and get more feedback on your own site.</p>

<p>It's much easier to turn a critical eye on someone else's work. Looking at your own stuff, you'll always have the reasoning that led you to the current state in the back of your mind. You're seeing what you have imagined and envisioned, not only what actually exists. Web design is about communication - with your own stuff, you already know the information that the site attempts to communicate. Reviewing someone else's work is a great way to exercise critical muscles that you can then use on your own material.</p>

<p>So check out <a href="http://criticue.com">Criticue</a> -- it's win-win: get timely, unbiased feedback on your stuff and practice your own critical eye.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Red-Gate SQL In The City SF 2012]]></title>
    <link href="http://www.aidanjryan.com/blog/2012/10/03/red-gate-sql-in-the-city-sf-2012/"/>
    <updated>2012-10-03T10:10:00-07:00</updated>
    <id>http://www.aidanjryan.com/blog/2012/10/03/red-gate-sql-in-the-city-sf-2012</id>
    <content type="html"><![CDATA[<p>I attended the Red-Gate <a href="http://sqlinthecity.red-gate.com/">SQL In the City</a> training event yesterday. It was a great opportunity to set the daily grind aside and focus on learning. It's always inspiring to watch a demo that shows a less painful way to accomplish something I'm struggling with. The challenge is to turn that inspiration into something productive and valuable. My notes follow.<!--more--></p>

<h2>Keynote</h2>

<p>John Theron (Red-Gate's chief marketing officer) set the stage for the day with some audience participation. We were asked to pass untied balloons back through the audience, with our eyes closed, without losing any air. It was an analogy to the difficulty of pushing database and application changes from dev into production, without losing any important changes. The keynote transitioned into highlighting all of the ways Red-Gate has been helping users manage and deploy database (and now application) changes for the past several years. One of the primary themes of the day was employing automation for more reliable and controlled releases, including the use of continuous integration, automated testing, and automated deployments.</p>

<p>One point that hit home for me was about the value of frequent releases: the sooner your new stuff gets in front of actual customers, the more quickly you get their feedback; and customer feedback is the most valuable of all. There is also less time for a mess to accumulate: the larger the delta of a release, the longer it will take to deploy, and the greater the chance of an issue.</p>

<h2>Monitoring</h2>

<p>Robin Anderson delivered a session demoing the SQL Monitor tool. The tool provides the ability to remotely gain insight into the state of your SQL server. Many of us employ a bag of monitor queries to check on the health of our SQL servers. The Red-Gate tool bundles up many best-practice health checks (not only DMV queries, but PerfMon, WMI, and file watching) into a convenient and attractive package, and adds alerting on top of it.</p>

<p>A very nice feature is the ability to create custom metrics driven by an arbitrary SQL query. The demo showed monitoring of a particular DMV query. I can imagine this being very useful for creating application behavior-specific metrics. For example, we have a consolidated logging system that pushes all of our server text logs to a central database. One could create a custom metric that triggers an alert when the rate of exceptions per hour exceeds a threshold.</p>

<p>Red-Gate is planning <a href="http://sqlmonitor.red-gate.com">a cloud-hosted monitoring service</a> that is fed by a relay service installed inside the customer's firewall. This is a nice compromise that should make it easier for DBAs to convince their IT departments to deploy the tool.</p>

<h2>Source Control for SQL Databases</h2>

<p>I attended two sessions that covered similar ground: source-controlling your database (schema and reference data). Ernest Hwang and <a href="http://www.scarydba.com/">Grant Fritchey</a> presented about the use of SQL Source Control to automatically push changes made to the database in SSMS into corresponding source-controlled SQL files.</p>

<p>In "Case Study: Why You Should Source Control Your Database," Ernest focused more on the deployment side, demoing the use of Jenkins to automatically build and deploy database changes when they are checked in. I was surprised that the build configuration required a good bit of hand-crafted MSBuild XML that used the Exec task to shell out to SQL Compare to deploy the database and run tests. I have found Exec to be pretty brittle for this kind of thing, because it introduces install and path dependencies on the build server. I found some <a href="http://weblogs.asp.net/plip/archive/2006/10/04/Red-Gate-MSBuild-Tasks.aspx">MSBuild Tasks</a>, posted by Phil Winstanley, that use the SQL Compare API - this could be a more reliable solution.</p>

<p>Grant Frichey's talk was titled "A Sandbox Development Process." He focused on the change-management side of database source control, presenting the use of SQL Virtual Restore to start from a (possibly scrubbed) production database, mapping it to a source-controlled schema, and then making "sandboxed" changes in a local development environment. SQL Virtual Restore looks like an awesome solution for working with real data while avoiding copying massive data files. A single full backup can exist in a shared location and be restored into a local database backed by small "virtual" vmdf and vldf files. Grant was my favorite speaker of the day - his style is humorous and engaging, and he's obviously got a ton of experience to back up his advice.</p>

<h2>Business Intelligence</h2>

<p>The duo of Noemi Moreno and Tom Austin presented "Social Media, Business Intelligence, and Bridging the SSMS-VS Divide." The talk used an interesting BI example to demonstrate the use of SQL Source Control (in Management Studio) and SQL Connect (in Visual Studio) by different developers to both evolve the same database schema. The integration looked pretty smooth, although the Visual Studio scenario seemed to involve a fair bit of magic behind the scenes that could be difficult to troubleshoot if things go south.</p>

<p>The application itself was cool, it involved an SSIS package that integrated data from an OLTP database and the Twitter API into a single SSAS cube which was then exported to Google Fusion Tables for a map visualization. I really like composing together several small implementations into a single solution, using the right tool for each part of the job. SSIS makes me queasy though.</p>

<h2>T-SQL Unit Testing</h2>

<p>The final session that I attended was "Thwarting Database Defects" (notice the play on "TDD?"). <a href="http://www.sqlity.net/">Sebastian Meine</a> and <a href="http://www.curiouslycorrect.com/">Dennis Lloyd Jr</a> presented about <a href="http://tsqlt.org">tSQLt</a>, a T-SQL unit testing framework. Unit testing of the database is not something that I have ever done directly - usually the closest we get is testing against our repositories.</p>

<p>The capabilities of the framework are very impressive. Every unit test runs in a transaction that is rolled back after the test executes, forcing you to completely isolate your tests (no "this one has to run before that one"), and guaranteeing a consistent state before each test run. It's driven by a set of stored procedures in a "tSQLt" schema that you create in your database itself, and provides the ability to mock out stored procs and even tables, and to assert about the expected results. Your tests themselves are a set of stored procedures under test-unit-specific schemas. The only drawback, in my opinion, is that the framework and unit tests must be created in the database that is being tested. Given the day's theme of source-controlling your database, this creates the need to ensure the unit tests don't make their way into production.</p>

<h2>Conclusion</h2>

<p>This was a worthwhile event, the pacing and organization were perfectly executed, the food was good, and plenty of Red-Gaters were available to talk between the sessions. I've got lots of inspiration to take back to work and turn into better-quality databases!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime TFS plugin]]></title>
    <link href="http://www.aidanjryan.com/blog/2012/09/24/sublime-tfs-plugin/"/>
    <updated>2012-09-24T09:38:00-07:00</updated>
    <id>http://www.aidanjryan.com/blog/2012/09/24/sublime-tfs-plugin</id>
    <content type="html"><![CDATA[<p>Here's a nice plugin for Sublime Text: <a href="https://bitbucket.org/CDuke/sublime-tfs/wiki/Home">Sublime TFS</a>, by Denis Kulikov. It provides TFS integration right in the editor.<!--more--></p>

<p>Sublime TFS will auto-check-out modified files (a must since files in TFS are readonly until checked out), and provides commands for Add, Delete, History, Check in, Check out, Undo, Get latest, and Compare with latest, available when the current file is under version control (except Add, obviously).</p>

<p>I made a small contribution to the project, adding support for the TFS Power Tools "Annotate" feature (commonly known as "blame"). I have one major complaint about the Annotate output from TFPT, though: you can't open a changeset view by clicking a changeset number. I'm considering using the <code>/noprompt</code> option and dumping the Annotate output into a Sublime Text buffer, then providing the ability to open a changeset view from the buffer. Sounds like fun!</p>
]]></content>
  </entry>
  
</feed>
