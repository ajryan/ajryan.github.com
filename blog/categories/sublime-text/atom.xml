<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sublime-text | Aidan Ryan]]></title>
  <link href="http://www.aidanjryan.com/blog/categories/sublime-text/atom.xml" rel="self"/>
  <link href="http://www.aidanjryan.com/"/>
  <updated>2013-10-12T10:51:06-07:00</updated>
  <id>http://www.aidanjryan.com/</id>
  <author>
    <name><![CDATA[Aidan Ryan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sublime TFS plugin]]></title>
    <link href="http://www.aidanjryan.com/blog/2012/09/24/sublime-tfs-plugin/"/>
    <updated>2012-09-24T09:38:00-07:00</updated>
    <id>http://www.aidanjryan.com/blog/2012/09/24/sublime-tfs-plugin</id>
    <content type="html"><![CDATA[<p>Here's a nice plugin for Sublime Text: <a href="https://bitbucket.org/CDuke/sublime-tfs/wiki/Home">Sublime TFS</a>, by Denis Kulikov. It provides TFS integration right in the editor.<!--more--></p>

<p>Sublime TFS will auto-check-out modified files (a must since files in TFS are readonly until checked out), and provides commands for Add, Delete, History, Check in, Check out, Undo, Get latest, and Compare with latest, available when the current file is under version control (except Add, obviously).</p>

<p>I made a small contribution to the project, adding support for the TFS Power Tools "Annotate" feature (commonly known as "blame"). I have one major complaint about the Annotate output from TFPT, though: you can't open a changeset view by clicking a changeset number. I'm considering using the <code>/noprompt</code> option and dumping the Annotate output into a Sublime Text buffer, then providing the ability to open a changeset view from the buffer. Sounds like fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSharpreter plugin for Sublime Text]]></title>
    <link href="http://www.aidanjryan.com/blog/2012/08/26/csharpreter-plugin-for-sublime-text/"/>
    <updated>2012-08-26T22:20:00-07:00</updated>
    <id>http://www.aidanjryan.com/blog/2012/08/26/csharpreter-plugin-for-sublime-text</id>
    <content type="html"><![CDATA[<p>I have been really loving the <a href="http://www.sublimetext.com/">Sublime Text</a> editor lately. It's quick, featureful, and extensible. I created a plugin that will build and run C# snippets from inside the editor.<!--more--></p>

<p>I write a lot of C#, and I often find myself wanting to check the behavior of a certain method or operator. My go-to tool for this has been <a href="http://www.sliver.com/dotnet/SnippetCompiler/">SnippetCompiler</a>, but now I'm trying to eliminate as many reasons for leaving my editor as possible. So, I created a plugin for Sublime Text that is inspired by SnippetCompiler - it takes the selected text and shoves it inside the main routine of a simple C# console app, builds it, and runs it. You can customize the "usings" and the boilerplate code auto-inserted at the end of the <code>Main</code> routine (currently prints a short message and reads a key).</p>

<p>You can find the plugin on <a href="https://github.com/ajryan/CSharpreter">GitHub</a>. Details follow.</p>

<h2>Enter the CSharpreter Sublime Text plugin</h2>

<p>CSharpreter compiles and executes fragments of C# code. The currently-selected text (or entire contents of the view, if no text is selected) is injected into the body of the Main routine of a C# console application. MSBuild is invoked and the executable is run in a shell window. This plugin has only been tested on Windows, but <em>may</em> be compatible with Mono's XBuild.</p>

<p>With the default settings, your code will be injected into a program defined as follows:</p>

<p>```
using System;
using System.Collections.Generic;
using System.Linq;</p>

<p>class Program
{
  static void Main(string[] args)
  {</p>

<pre><code>// YOUR TEXT HERE

Console.WriteLine();
Console.WriteLine("Press any key to exit...");
Console.ReadKey();
</code></pre>

<p>  }
}
```</p>

<h2>Commands</h2>

<ul>
<li>CSharpreter: Interpret - Execute the currently-selected text, or with no selected text, the entire contents of the view.</li>
<li>CSharpreter: Cleanup - Delete the %temp%\CSharpreter folder, where temporary source and binaries are written.</li>
</ul>


<h2>Settings</h2>

<p>In the CSharpreter package folder, edit c_sharpreter.sublime-settings file to modify the defaults.</p>

<ul>
<li>msbuild_path - Path to the MSBuild executable</li>
<li>default_usings - List of namespaces to inject at the top of the source file.</li>
<li>main_end - List of statements to inject at the end of the Main method.</li>
</ul>


<p>```
{</p>

<pre><code>"msbuild_path": "C:/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuild.exe",
"default_usings":
[
    "System", "System.Collections.Generic", "System.Linq"
],
"main_end":
[
    "Console.WriteLine();",
    "Console.WriteLine(\"Press any key to exit...\");",
    "Console.ReadKey();"
]
</code></pre>

<p>}
```</p>

<h2>Installation</h2>

<p>Clone this repository into your Sublime Text packages folder.</p>

<p><strong>Windows 7 / Vista and above</strong></p>

<pre><code>C:\Users\&lt;username&gt;\AppData\Roaming\Sublime Text 2\Packages
</code></pre>

<p><strong>Windows XP</strong></p>

<pre><code>C:\Documents and Settings\&lt;username&gt;\Application Data\Sublime Text 2\Packages
</code></pre>
]]></content>
  </entry>
  
</feed>
